1.
  Private þá er ekki hægt að ná í gögnin með external kalli, hins vegar virkar internal köll fínt.
  Procted. þá er hægt að skoða gögnin en ekki hægt að eiga við þau.
  Public. þá er hægt að skoða gögnin og eiga við þau.
2.
  Inheritance er hugtak sem að notað er í klassa gerð. Þar sem maður er með base class sem að "undir klassar" get notast við uppbyggingu á base class
  dæmi:
  class player
  {
    function equipWeapon(Weapon AK47)
    {
      echo "Allah Akhbar";
    }
  }
  class Weapon
  {

  }
  class AK47 extends Weapon
  {

  }
3.
  Namespace tekur í raun frá breytu nafn í kóða. ef að namespace er skilgreint þá er ekki hægt að nota það því að það er frátekið. eins og með nöfn á files í stýrikerfi. enginn af þeim má vera eins undir sömu
  möppu, þannig hver file name er namespace fyrir viðkomandi folder
4.
  Sjá Book class í classes.php

5.

6.
  Sjá classes.php lína 22-26
7.
  Sjá User class í classes.php
8.
  það góða við OOP í flest öllum forritunar tungumálum er að það kemur í veg fyrir sítekna endurtekningu.
  Það er t.d ekkert sniðugt að vinna með OOP á einföldum vefsíðum sem einungis er birt gögn og ekkert breytist nema á 6 mánaða fresti
  það er sniðugt að nota OOP þegar maður þarf að gera flóknar vefsíður sem að eru með t.d gagnagrunn, notendahóp og virkt vefsvæði
  
